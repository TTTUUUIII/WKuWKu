import java.nio.file.Paths
import java.security.MessageDigest

android {
    compileSdk rootProject.ext.versions.compileSdkVersion
    defaultConfig {
        minSdk rootProject.ext.versions.minSdkVersion
        targetSdk rootProject.ext.versions.targetSdkVersion
        externalNativeBuild {
            cmake {
                cppFlags ''
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
            universalApk false
        }
    }


    buildFeatures {
        prefab true
    }

    ndkVersion "28.0.13004108"
}

static def getMD5(File file) {
    MessageDigest md = MessageDigest.getInstance("MD5")
    file.withInputStream { is ->
        byte[] buffer = new byte[8192]
        int bytesRead
        while ((bytesRead = is.read(buffer)) != -1) {
            md.update(buffer, 0, bytesRead)
        }
    }
    return md.digest().encodeHex().toString()
}

afterEvaluate {
    tasks.named("assembleRelease") {
        doLast {
            def md5sums = ""
            def output = Paths.get(rootDir.absolutePath, "build", "outputs", "apk", "release")
            file("build/outputs/apk/release/")
                    .listFiles()
                    .findAll { it.name.endsWith(".apk") }
                    .forEach {file ->
                        md5sums += getMD5(file)
                        copy {
                            from file.absolutePath
                            into output
                        }
                    }

            file(Paths.get(output.toString(), "MD5SUMS.TXT")) <<  String.format("%-24s%s\n", project.name, md5sums)
        }
    }
}

dependencies {
    implementation(libs.games.frame.pacing)
    implementation(libs.oboe)
}