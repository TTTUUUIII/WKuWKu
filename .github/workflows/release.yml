# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    tags:
      - 'v*'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Set the Release's Type
      run: | 
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        if [[ "$TAG_NAME" == *a] || "$TAG_NAME" == *b ]]; then
          echo "PRE_RELEASE=true" >> $GITHUB_ENV
        else
          echo "PRE_RELEASE=false" >> %GITHUB_ENV
        fi
        
    - name: Configure APK Sign
      run: |
        echo "${{secrets.KEY}}" | base64 -d > keystore.jks
        echo "key.path=keystore.jks" >> local.properties
        echo "key.pass=${{secrets.KEY_PASS}}" >> local.properties
        echo "key.alias=${{secrets.KEY_ALIAS}}" >> local.properties
        
    - name: Build with Gradle Wrapper
      run: ./gradlew :app:assembleRelease

    - name: Create Github Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: ${{env.PRE_RELEASE}}
        files: app/build/outputs/apk/release/*.apk
